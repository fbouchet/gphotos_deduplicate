name: Release Workflow

on:
  push:
    branches:
      - main  # Trigger full release process on main branch
      - dev   # Trigger tests only on dev branch
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Step 3: Install Poetry
    - name: Install Poetry
      run: pip install poetry

    # Step 4: Install Dependencies
    - name: Install dependencies
      run: poetry install

    # Step 5: Run Tests (if any)
    - name: Run tests
      run: poetry run pytest  # Replace with your testing command

  release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Step 3: Install Poetry
    - name: Install Poetry
      run: pip install poetry

    # Step 4: Install Dependencies
    - name: Install dependencies
      run: poetry install

    # Step 5: Extract Version and Tag
    - name: Bump Version and Tag
      id: tag
      run: |
        VERSION=$(grep -oP '(?<=version = ")[^"]+' pyproject.toml)
        echo "Version is $VERSION"
        echo "tag=$VERSION" >> $GITHUB_ENV

    # Step 6: Create GitHub Release
    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.tag }}
        release_name: Release ${{ env.tag }}
        body: |
          Changes in this release:
          $(cat CHANGELOG.md | awk '/## \['${{ env.tag }}'\]/,/^$/')
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
